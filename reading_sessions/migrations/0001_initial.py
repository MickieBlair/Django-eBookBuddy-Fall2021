# Generated by Django 3.2.7 on 2021-10-02 11:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arrival_Description',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Arrival Description',
                'verbose_name_plural': 'Arrival Descriptions',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Connection_Drop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
            ],
            options={
                'verbose_name': 'Connection Drop',
                'verbose_name_plural': 'Connection Drops',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='End_Session_Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('read_with_scheduled', models.BooleanField(blank=True, null=True, verbose_name='Read With Scheduled')),
                ('temp_student_assigned', models.BooleanField(blank=True, null=True, verbose_name='Temporary Student Assigned')),
                ('level_assessment_performed', models.BooleanField(default=False, verbose_name='Performed Assessment')),
                ('scheduled_sub', models.BooleanField(default=False, verbose_name='Scheduled Sub')),
                ('books_read', models.IntegerField(blank=True, null=True)),
                ('no_books', models.BooleanField(default=False, verbose_name='No Books Read')),
                ('session_comment', models.TextField(blank=True, max_length=2000, null=True)),
                ('social_emotional_learning_comment', models.TextField(blank=True, max_length=2000, null=True)),
                ('follow_up_needed', models.BooleanField(default=False, verbose_name='Needs Follow Up')),
                ('follow_up_comment', models.TextField(blank=True, max_length=2000, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
            ],
            options={
                'verbose_name': 'End Session Evaluation',
                'verbose_name_plural': 'End Session Evaluations',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation_Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Evaluation Level',
                'verbose_name_plural': 'Evaluation Levels',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Follow_Up_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Follow Up Type',
                'verbose_name_plural': 'Follow Up Types',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Match_Attendance_Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_reassigned', models.BooleanField(default=False, verbose_name='M-R')),
                ('student_present', models.BooleanField(default=False, verbose_name='S-Present')),
                ('student_time_in', models.TimeField(blank=True, null=True)),
                ('student_time_out', models.TimeField(blank=True, null=True)),
                ('student_reassigned', models.BooleanField(default=False, verbose_name='S-R')),
                ('student_time_in_pending', models.IntegerField(blank=True, default=0, null=True)),
                ('student_time_in_breakout', models.IntegerField(blank=True, default=0, null=True)),
                ('volunteer_present', models.BooleanField(default=False, verbose_name='V-Present')),
                ('volunteer_time_in', models.TimeField(blank=True, null=True)),
                ('volunteer_time_out', models.TimeField(blank=True, null=True)),
                ('volunteer_reassigned', models.BooleanField(default=False, verbose_name='V-R')),
                ('volunteer_in_breakout_alone', models.IntegerField(blank=True, default=0, null=True)),
                ('volunteer_in_breakout_w_student', models.IntegerField(blank=True, default=0, null=True)),
                ('match_complete_at', models.TimeField(blank=True, null=True)),
                ('match_ended_at', models.TimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('match_successful', models.BooleanField(default=False, verbose_name='Success')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
            ],
            options={
                'verbose_name': 'Match Attendance Record',
                'verbose_name_plural': 'Match Attendance Records',
                'ordering': ['session__date', 'session__day_time'],
            },
        ),
        migrations.CreateModel(
            name='Match_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_status_active', models.BooleanField(default=True, verbose_name='Active')),
                ('member_reassigned', models.BooleanField(default=False, verbose_name='M-R')),
                ('vol_reassigned', models.BooleanField(default=False, verbose_name='V-R')),
                ('student_reassigned', models.BooleanField(default=False, verbose_name='S-R')),
                ('student_online', models.BooleanField(default=False, verbose_name='Student Online')),
                ('display_student_location', models.BooleanField(default=True)),
                ('buddy_online', models.BooleanField(default=False, verbose_name='Buddy Online')),
                ('display_buddy_location', models.BooleanField(default=True)),
                ('both_online', models.BooleanField(default=False, verbose_name='Both Present')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
            ],
            options={
                'verbose_name': 'Match Status',
                'verbose_name_plural': 'Match Statuses',
                'ordering': ['session__date', 'session__day_time', 'both_online'],
            },
        ),
        migrations.CreateModel(
            name='Match_Status_Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Match Status Option',
                'verbose_name_plural': 'Match Status Option',
            },
        ),
        migrations.CreateModel(
            name='Match_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('short_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Match Type',
                'verbose_name_plural': 'Match Types',
            },
        ),
        migrations.CreateModel(
            name='Relational_Engagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Relational Engagement',
                'verbose_name_plural': 'Relational Engagements',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Scheduled_Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
            ],
            options={
                'verbose_name': 'Scheduled Match',
                'verbose_name_plural': 'Scheduled Matches',
            },
        ),
        migrations.CreateModel(
            name='Temporary_Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
            ],
            options={
                'verbose_name': 'Temporary Match',
                'verbose_name_plural': 'Temporary Matches',
            },
        ),
        migrations.CreateModel(
            name='Temporary_Match_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('short_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Temporary Match Type',
                'verbose_name_plural': 'Temporary Match Types',
            },
        ),
        migrations.CreateModel(
            name='User_Session_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manual_redirect_on', models.BooleanField(default=False)),
                ('orientation_complete', models.BooleanField(default=False)),
                ('logged_in', models.BooleanField(default=False)),
                ('on_landing_page', models.BooleanField(default=False)),
                ('needs_new_buddy', models.BooleanField(default=False, verbose_name='Needs New Buddy')),
                ('needs_session_match', models.BooleanField(default=False, verbose_name='Needs Match')),
                ('in_room_with_sch_buddy', models.BooleanField(default=False, verbose_name='With Sch Buddy')),
                ('in_room_with_temp_buddy', models.BooleanField(default=False, verbose_name='With Temp Buddy')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('current_active_match_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_type_active', to='reading_sessions.match_type', verbose_name='Type Active')),
            ],
            options={
                'verbose_name': 'User Session Status',
                'verbose_name_plural': 'User Session Statuses',
                'ordering': ['user'],
            },
        ),
    ]
